{"version":3,"sources":["component/Loading/LoadingIndicator.js","store/action.js","container/contact/contact.component.jsx","hoc/Auxilary/Auxilary.js","component/Backdrop/Backdrop.component.jsx","component/modal/Modal.component.jsx","component/ContactList/ContactList.component.jsx","container/List/list.component.jsx","container/Homepage.component.jsx","App.js","store/reducer.js","reportWebVitals.js","firebase/firebase.utils.js","index.js"],"names":["LoadingIndicator","className","GET_ID_CONTACT","GET_ID_CONTACT_START","GET_ID_CONTACT_FAIL","ADD_CONTACT","REMOVE_CONTACT","UPDATE_CONTACT","GET_CONTACT","ADD_CONTACT_START","REMOVE_CONTACT_START","UPDATE_CONTACT_START","GET_CONTACT_START","ADD_CONTACT_FAIL","REMOVE_CONTACT_FAIL","UPDATE_CONTACT_FAIL","GET_CONTACT_FAIL","addContactFail","msg","type","addContact","detail","dispatch","getFirestore","collection","add","then","addContactSuccess","catch","error","message","fetchContact","tempDoc","get","querySnapshot","forEach","doc","push","id","data","updateContact","update","updateContactSuccess","deleteContact","delete","deleteContactSuccess","getIdContact","res","toast","configure","Contact","useState","firstName","setFirstname","lastName","setLastName","phone","setPhone","email","setEmail","age","setAge","useSelector","state","messagead","color","isLoading","loading","useDispatch","useEffect","success","autoClose","onSubmit","e","preventDefault","actionType","htmlFor","value","onChange","event","target","style","aux","props","children","backdrop","show","onClick","clicked","Modal","map","handleSubmit","modalClosed","transform","opacity","float","cursor","padding","ConatctList","details","ig","onEdit","onDelete","ContactHomeList","setId","pag","setPag","setShow","offset","setOffset","activePage","setActivePage","getpag","React","useCallback","slice","editHandler","deleteHandler","itemsCountPerPage","totalItemsCount","length","pageRangeDisplayed","pageNumber","HomePage","to","exact","activeClassName","activeStyle","overflow","App","path","component","AddContactPage","render","info","position","POSITION","BOTTOM_CENTER","initialState","reducer","action","actionTypes","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0be7c36b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import { getFirestore } from 'redux-firestore';\r\n\r\nexport const GET_ID_CONTACT = 'GET_ID_CONTACT';\r\nexport const GET_ID_CONTACT_START = 'GET_ID_CONTACT_START';\r\nexport const GET_ID_CONTACT_FAIL = 'GET_ID_CONTACT_FAIL';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const REMOVE_CONTACT = 'REMOVE_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const ADD_CONTACT_START = 'ADD_CONTACT_START';\r\nexport const REMOVE_CONTACT_START = 'REMOVE_CONTACT_START';\r\nexport const UPDATE_CONTACT_START = 'UPDATE_CONTACT_START';\r\nexport const GET_CONTACT_START = 'GET_CONTACT_START';\r\nexport const ADD_CONTACT_FAIL = 'ADD_CONTACT_FAIL';\r\nexport const REMOVE_CONTACT_FAIL = 'REMOVE_CONTACT_FAIL';\r\nexport const UPDATE_CONTACT_FAIL = 'UPDATE_CONTACT_FAIL';\r\nexport const GET_CONTACT_FAIL = 'GET_CONTACT_FAIL';\r\n\r\nexport const addContactStart = () => {\r\n    return{\r\n        type: ADD_CONTACT_START\r\n    }\r\n}\r\n\r\nexport const addContactSuccess = (msg) => {\r\n    return{\r\n        type: ADD_CONTACT,\r\n        msg: msg\r\n    }\r\n}\r\n\r\nexport const addContactFail = (msg) => {\r\n    return{\r\n        type: ADD_CONTACT_FAIL,\r\n        msg: msg\r\n    }\r\n}\r\n\r\nexport const updateContactSuccess = (msg) => {\r\n    return{\r\n        type: UPDATE_CONTACT,\r\n        msg: msg\r\n    }\r\n}\r\n\r\nexport const updateContactStart = () => {\r\n    return{\r\n        type: UPDATE_CONTACT_START\r\n    }\r\n}\r\n\r\nexport const updateContactFail = (msg) => {\r\n    return{\r\n        type: UPDATE_CONTACT_FAIL,\r\n        msg: msg\r\n    }\r\n}\r\n\r\nexport const deleteContactStart = () => {\r\n    return{\r\n        type: REMOVE_CONTACT_START\r\n    }\r\n}\r\n\r\nexport const deleteContactSuccess = (id,msg) => {\r\n    return{\r\n        type: REMOVE_CONTACT,\r\n        id: id,\r\n        msg: msg\r\n    }\r\n}\r\n\r\nexport const deleteContactFail = (msg) => {\r\n    return{\r\n        type: REMOVE_CONTACT_FAIL,\r\n        msg: msg\r\n    }\r\n}\r\n\r\nexport const fetchContactStart = () => {\r\n    return{\r\n        type: GET_CONTACT_START\r\n    }\r\n}\r\n\r\nexport const fetchContactSuccess = (detail) => {\r\n    return{\r\n        type: GET_CONTACT,\r\n        detail: detail\r\n    }\r\n}\r\n\r\nexport const fetchContactFail = (msg) => {\r\n    return{\r\n        type: GET_CONTACT_FAIL,\r\n        msg: msg\r\n    }\r\n}\r\n\r\nexport const getIdContactStart = () => {\r\n    return{\r\n        type: GET_ID_CONTACT_START\r\n    }\r\n}\r\n\r\nexport const getIdContactSuccess = (detail) => {\r\n    return{\r\n        type: GET_ID_CONTACT,\r\n        detail: detail\r\n    }\r\n}\r\n\r\nexport const getIdContactFail = (msg) => {\r\n    return{\r\n        type: GET_ID_CONTACT_FAIL,\r\n        msg: msg\r\n    }\r\n}\r\n\r\nexport const addContact = (detail) => {\r\n    return dispatch => {\r\n        dispatch(addContactStart());\r\n            const firestore = getFirestore();\r\n            firestore.collection(\"contacts\")\r\n              .add(detail)\r\n              .then(() => {\r\n                const msg = \"Your Data Added has been Submitted 👍.\";\r\n                dispatch( addContactSuccess(msg));\r\n              })\r\n              .catch((error) => dispatch( addContactFail(error.message)));\r\n    }\r\n}\r\n\r\nexport const fetchContact = () => {\r\n    return dispatch => {\r\n        dispatch(fetchContactStart());\r\n        const tempDoc = [];\r\n        const firestore = getFirestore();\r\n        const snapshot  =  firestore.collection(\"contacts\").get();\r\n    snapshot.then((querySnapshot) => {\r\n        \r\n        querySnapshot.forEach((doc) => {\r\n           tempDoc.push({id: doc.id, ...doc.data()});\r\n        })\r\n        dispatch(fetchContactSuccess(tempDoc));\r\n   }).catch((error) => dispatch( fetchContactFail(error.message)));\r\n    }\r\n}\r\n\r\nexport const updateContact = (id, detail) => {\r\n    return dispatch => {\r\n        dispatch(updateContactStart());\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"contacts\").doc(id)\r\n        .update(detail)\r\n        .then(() => {\r\n          const msg = \"Your Data Update has been Submitted 👍.\";\r\n          dispatch( updateContactSuccess(msg));\r\n        })\r\n        .catch((error) => dispatch( updateContactFail(error.message)));\r\n    }\r\n}\r\n\r\nexport const deleteContact = (id) => {\r\n    return dispatch => {\r\n        dispatch(deleteContactStart());\r\n        const firestore = getFirestore();\r\n        const res = firestore.collection(\"contacts\").doc(id).delete();\r\n        res.then(() => {\r\n            const msg = \"Data is Deleting Successfully 👍.\";\r\n            dispatch( deleteContactSuccess(id,msg));\r\n        })\r\n        .catch((error) => dispatch( deleteContactFail(error.message)));\r\n    }\r\n}\r\n\r\nexport const getIdContact = (id) => {\r\n    return dispatch => {\r\n        const tempDoc = [];\r\n        dispatch(getIdContactStart());\r\n        const firestore = getFirestore();\r\n        const res = firestore.collection(\"contacts\").doc(id).get();\r\n        res.then((res) => {\r\n            tempDoc.push(res.data());\r\n            dispatch( getIdContactSuccess(tempDoc));\r\n        })\r\n        .catch((error) => dispatch( getIdContactFail(error.message)));\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Loading from '../../component/Loading/LoadingIndicator';\r\nimport './contact.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport * as actionType from '../../store/action';\r\nimport {toast} from 'react-toastify';  \r\nimport 'react-toastify/dist/ReactToastify.css';  \r\n\r\ntoast.configure();\r\nconst Contact = () => {\r\n    const [firstName, setFirstname] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const message = useSelector(state => state.messagead);\r\n    const color = useSelector(state => state.color);\r\n    const isLoading = useSelector(state => state.loading);\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (email !== '' || firstName !== '' || lastName !== '' || phone !== '' || age !== ''){\r\n            const detail = {email: email,\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                phone: phone,\r\n                age: age };\r\n                dispatch(actionType.addContact(detail));\r\n        } else {\r\n            dispatch(actionType.addContactFail(\"Please Fill All Deatil in the Form\"));\r\n        }\r\n        setFirstname('');\r\n        setLastName('');\r\n        setEmail('');\r\n        setPhone('');\r\n        setAge('');\r\n      };\r\n\r\n      useEffect(() => {\r\n          if(message){\r\n        color === 'green' ? toast.success(message, {autoClose:3000}) : toast.error(message, {autoClose:10000})\r\n          }\r\n      },[color, message]);\r\n\r\n        return (\r\n            <div className=\"form\">\r\n                {isLoading && <Loading />}\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                    <div className='control'>\r\n                        <label htmlFor='firstName'>FirstName :-</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            value={firstName}\r\n                            onChange={event => {\r\n                                setFirstname(event.target.value);\r\n                            }} /> \r\n                    </div>\r\n                    <div className='control'>\r\n                        <label htmlFor='lastName'>LastName :-</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            value={lastName}\r\n                            onChange={event => {\r\n                                setLastName(event.target.value);\r\n                            }} /> \r\n                    </div>\r\n                    <div className='control'>\r\n                        <label htmlFor='email'>Email :-</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={event => {\r\n                                setEmail(event.target.value);\r\n                            }} /> \r\n                    </div>\r\n                    <div className='control'>\r\n                        <label htmlFor='phone'>Phone :-</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"phone\"\r\n                            value={phone}\r\n                            onChange={event => {\r\n                                setPhone(event.target.value);\r\n                            }} /> \r\n                    </div>\r\n                    <div className='control'>\r\n                        <label htmlFor='age'>Age :-</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"age\"\r\n                            value={age}\r\n                            onChange={event => {\r\n                                setAge(event.target.value);\r\n                            }} /> \r\n                    </div>\r\n                    \r\n                        <button type=\"submit\" className=\"btn\" style={{color: 'blue'}}>Add Contact</button>\r\n                        \r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Contact;","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, {  useEffect, useState } from 'react';\nimport Loading from '../Loading/LoadingIndicator';\nimport {useDispatch, useSelector} from 'react-redux';\nimport './Modal.css';\nimport Aux from '../../hoc/Auxilary/Auxilary';\nimport Backdrop from '../Backdrop/Backdrop.component';\nimport * as actionType from '../../store/action';\n\n\nconst Modal = (props) => {\n    let [firstName, setFirstname] = useState('');\n    let [lastName, setLastName] = useState('');\n    let [phone, setPhone] = useState('');\n    let [email, setEmail] = useState('');\n    let [age, setAge] = useState('');\n    //const message = useSelector(state => state.message);\n    const isLoading = useSelector(state => state.loading);\n    const detail = useSelector(state => state.detail);\n    const dispatch = useDispatch();\n    //const color = useSelector(state => state.color);\n    //const isLoading = useSelector(state => state.loading);\n\n    useEffect(() => {\n      dispatch(actionType.getIdContact(props.id));\n    }, [dispatch, props.id]);\n\n    useEffect(() => {\n      detail.map((doc) => {\n        return ( setFirstname(doc.firstName),\n        setLastName(doc.lastName),\n        setEmail(doc.email),\n        setPhone(doc.phone),\n        setAge(doc.age)\n        );\n    });\n    }, [detail]);\n    \n const handleSubmit = (e) => {\n  e.preventDefault();\n  const detail = {email: email,\n    firstName: firstName,\n    lastName: lastName,\n    phone: phone,\n    age: age };\n    dispatch(actionType.updateContact(props.id, detail));\n    dispatch(actionType.fetchContact());\n};\n\n        return (\n            <Aux>\n                <Backdrop show={props.show} clicked={props.modalClosed} />\n                <div\n                    className='Modal'\n                    style={{\n                        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: props.show ? '1' : '0'\n                    }}>\n                      <div className='head'>\n                        <h2>Edit Form</h2>\n                      <p onClick={props.modalClosed} style={{float: 'right', cursor: 'pointer', padding: '5px'}}>&#10006;</p>\n                      </div>\n                    <div >\n                      \n                    {isLoading && <Loading />}\n            <form onSubmit={handleSubmit}>\n                <div className='control'>\n                    <label htmlFor='firstName'>FirstName :-</label>\n                    <input\n                        type=\"text\"\n                        id=\"firstName\"\n                        value={firstName}\n                        onChange={event => {\n                          setFirstname(event.target.value);\n                        }} /> \n                </div>\n                <div className='control'>\n                    <label htmlFor='lastName'>LastName :-</label>\n                    <input\n                        type=\"text\"\n                        id=\"lastName\"\n                        value={lastName}\n                        onChange={event => {\n                          setLastName(event.target.value);\n                        }} /> \n                </div>\n                <div className='control'>\n                    <label htmlFor='email'>Email :-</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={event => {\n                          setEmail(event.target.value);\n                        }} /> \n                </div>\n                <div className='control'>\n                    <label htmlFor='phone'>Phone :-</label>\n                    <input\n                        type=\"text\"\n                        id=\"phone\"\n                        value={phone}\n                        onChange={event => {\n                          setPhone(event.target.value);\n                        }} /> \n                </div>\n                <div className='control'>\n                    <label htmlFor='age'>Age :-</label>\n                    <input\n                        type=\"number\"\n                        id=\"age\"\n                        value={age}\n                        onChange={event => {\n                          setAge(event.target.value);\n                        }} /> \n                </div>\n            </form>\n        </div>\n        <button className=\"btn btn-secondary\" onClick={props.modalClosed}>\n              Close\n            </button>\n            <button className=\"btn btn-primary\" onClick={handleSubmit}>\n              Save Changes\n            </button>\n                </div>\n            </Aux>\n        );\n}\n\nexport default Modal;","import React from 'react';\r\nimport Loading from '../Loading/LoadingIndicator';\r\nimport './contactlist.css';\r\n\r\nconst ConatctList = props => {\r\n    \r\n  return (\r\n    <section className=\"list\">\r\n      <h2>Loaded Contact Details</h2>\r\n        {props.isLoading && <Loading />}\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>FirstName</th>\r\n            <th>LastName</th>\r\n            <th>Email</th>\r\n            <th>Phone</th>\r\n            <th>Age</th>\r\n            <th>Action Buttons</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n        {props.details.map(ig => (\r\n          <tr key={ig.id} >\r\n            <td>{ig.firstName}</td>\r\n            <td>{ig.lastName}</td>\r\n            <td>{ig.email}</td>\r\n            <td>{ig.phone}</td>\r\n            <td>{ig.age}</td>\r\n            <td><button className=\"btn btn-outline-info\" onClick={() => {props.onEdit(ig.id)}} style={{color: 'blue'}}>Edit </button>\r\n            <button className=\"btn btn-outline-info\" onClick={() => {props.onDelete(ig.id)}} style={{color: 'red'}}>Delete</button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ConatctList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ModalContact from '../../component/modal/Modal.component';\r\nimport ContactList from '../../component/ContactList/ContactList.component';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport './list.css';\r\nimport Pagination from \"react-js-pagination\";\r\nimport * as actionType from '../../store/action';\r\nimport {toast} from 'react-toastify';  \r\nimport 'react-toastify/dist/ReactToastify.css';  \r\n\r\ntoast.configure();\r\n\r\nconst ContactHomeList = () => {\r\n    const [id, setId] = useState('');\r\n    const details = useSelector(state => state.details);\r\n    const message = useSelector(state => state.message);\r\n    const color = useSelector(state => state.color);\r\n    const isLoading = useSelector(state => state.loading);\r\n    const dispatch = useDispatch();\r\n    const [pag, setPag] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    let [offset, setOffset] = useState(0);\r\n    const detailPerPage = 5;\r\n    const [activePage, setActivePage] = useState(1);\r\n    const toggleContactFormVisiblity = () => {\r\n        setShow(false);\r\n        dispatch(actionType.fetchContact());\r\n    }\r\n\r\n    const getpag = React.useCallback(() => {\r\n        setPag(details.slice(offset, offset + detailPerPage));\r\n    }, [details, offset, setPag]);\r\n\r\n    useEffect(() => {\r\n        getpag();\r\n    }, [getpag]);\r\n\r\n    useEffect(() => {\r\n        dispatch(actionType.fetchContact());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(message){\r\n      color === 'green' ? toast.success(message, {autoClose:3000}) : toast.error(message, {autoClose:10000})\r\n        }\r\n      },[color, message]);\r\n\r\n    const editHandler = (id) => {\r\n        setShow(true);\r\n        setId(id);\r\n    }\r\n\r\n\r\n    const handlePageChange = (pageNumber) => {  \r\n        let num = pageNumber-1;\r\n        setOffset(num*detailPerPage);\r\n        setActivePage(pageNumber);\r\n        getpag();\r\n    }\r\n\r\n    const updateContact = (detail, id) => {\r\n        \r\n        dispatch(actionType.updateContact(id, detail));\r\n        \r\n    }\r\n    const deleteHandler = (id) => {\r\n       \r\n        dispatch(actionType.deleteContact(id));\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <ContactList isLoading={isLoading} details={pag}\r\n        onEdit={(id) => editHandler(id)} onDelete={(id) => deleteHandler(id)}/>\r\n        {show ? <ModalContact id={id} show={show} updateContact={updateContact} modalClosed={toggleContactFormVisiblity} />\r\n        : null}\r\n        <div>\r\n            <Pagination\r\n          activePage={activePage}\r\n          itemsCountPerPage={5}\r\n          totalItemsCount={details.length}\r\n          pageRangeDisplayed={3}\r\n          onChange={handlePageChange}\r\n        />\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactHomeList;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst HomePage = () => {\r\n    return (\r\n    <div className='contact' >\r\n        <header>\r\n            <nav>\r\n                <ul>\r\n                    <li><NavLink\r\n                        to=\"/add_contact\"\r\n                        exact\r\n                        activeClassName=\"my-active\"\r\n                        activeStyle={{\r\n                            color: 'blue',\r\n                            overflow: 'hidden'\r\n                        }}><h2>Add Contact Detail</h2></NavLink></li>\r\n                    <li><NavLink to=\"/contact_list\"><h2>View Contact List</h2></NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport AddContactPage from './container/contact/contact.component';\nimport ContactHomeList from './container/List/list.component';\nimport HomePage from './container/Homepage.component';\nimport {toast} from 'react-toastify';  \nimport 'react-toastify/dist/ReactToastify.css';  \n\ntoast.configure();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Contact Details\n        </p>\n      </header>\n      <HomePage />\n      <Switch>\n        <Route exact path='/add_contact' component={AddContactPage} />\n        <Route path='/contact_list' component={ContactHomeList} />\n        <Route path='/' render={() => {toast.info('Please Select Any One Of These Options',  \n           {position: toast.POSITION.BOTTOM_CENTER});}} />\n      </Switch>\n    </div>\n  );\n}\n\n\nexport default App;","import * as actionTypes from './action';\r\n\r\nconst initialState = {\r\n    details: [],\r\n    messagead: '',\r\n    message: '',\r\n    loading: false,\r\n    color: 'green',\r\n    detail: []\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_CONTACT_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.GET_CONTACT_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.UPDATE_CONTACT_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.REMOVE_CONTACT_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.GET_ID_CONTACT_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.ADD_CONTACT_FAIL:\r\n            return {\r\n                ...state,\r\n                color: 'red',\r\n                messagead: action.msg\r\n            }\r\n        case actionTypes.GET_CONTACT_FAIL:\r\n            return {\r\n                ...state,\r\n                 color: 'red',\r\n                 message: action.msg\r\n            }\r\n        case actionTypes.UPDATE_CONTACT_FAIL:\r\n            return {\r\n                ...state,\r\n                color: 'red',\r\n                message: action.msg\r\n            }\r\n        case actionTypes.REMOVE_CONTACT_FAIL:\r\n            return {\r\n                ...state,\r\n                color: 'red',\r\n                message: action.msg\r\n            }\r\n        case actionTypes.GET_ID_CONTACT_FAIL:\r\n            return {\r\n                ...state,\r\n                color: 'red',\r\n                message: action.msg\r\n            }\r\n        case actionTypes.ADD_CONTACT:\r\n          return {\r\n              ...state,\r\n              messagead: action.msg,\r\n              loading: false,\r\n              color: 'green'\r\n          }\r\n        case actionTypes.GET_CONTACT:\r\n            return{\r\n                ...state,\r\n                details: action.detail,\r\n                message: action.msg,\r\n                loading: false,\r\n                color: 'green'\r\n            }\r\n        case actionTypes.UPDATE_CONTACT:\r\n            return{\r\n                ...state,\r\n                message: action.msg,\r\n                loading: false,\r\n                color: 'green'\r\n            }\r\n        case actionTypes.REMOVE_CONTACT:\r\n            return{\r\n                ...state,\r\n                details: state.details.filter(detail => detail.id !== action.id),\r\n                message: action.msg,\r\n                loading: false,\r\n                color: 'green'\r\n            }\r\n        case actionTypes.GET_ID_CONTACT:\r\n            return{\r\n                ...state,\r\n                detail: action.detail,\r\n                loading: false\r\n            }\r\n       default:\r\n           \r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nexport var firebaseConfig = {\r\n  apiKey: \"AIzaSyBFoSKKyuKe3CPY5Cq8VA4z1bWgjkjvWKA\",\r\n  authDomain: \"contact-b1932.firebaseapp.com\",\r\n  projectId: \"contact-b1932\",\r\n  storageBucket: \"contact-b1932.appspot.com\",\r\n  messagingSenderId: \"743737740964\",\r\n  appId: \"1:743737740964:web:93f7e1d314a430fdeba031\",\r\n  measurementId: \"G-1MPXG63BPL\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport rootReducer from './store/reducer';\nimport reportWebVitals from './reportWebVitals';\nimport firebaseConfig from './firebase/firebase.utils';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport firebase from 'firebase/app';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebaseConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store} >\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ReactReduxFirebaseProvider>\n  </Provider>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}